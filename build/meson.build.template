# SQL Notebook
# Copyright (C) 2018 Brian Luft
#
# Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated
# documentation files (the "Software"), to deal in the Software without restriction, including without limitation the
# rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to
# permit persons to whom the Software is furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all copies or substantial portions of the
# Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE
# WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS
# OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
# OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

project(
    'sqlnotebook',
    ['c', 'cpp', 'vala'])

gnome = import('gnome')

gio_dep = dependency('gio-2.0')
glib_dep = dependency('glib-2.0')
gobject_dep = dependency('gobject-2.0')
gmodule_dep = dependency('gmodule-2.0')
gtk_dep = dependency('gtk+-3.0')
gee_dep = dependency('gee-0.8')
z_dep = meson.get_compiler('c').find_library('z')
linux_dl_dep = meson.get_compiler('c').find_library('dl', required: false)
threads_dep = dependency('threads')
m_dep = meson.get_compiler('c').find_library('m', required: false)
posix_dep = meson.get_compiler('vala').find_library('posix')
zip_dep = meson.get_compiler('c').find_library('zip')
jansson_dep = meson.get_compiler('c').find_library('jansson',
    dirs: [ <homebrew-lib-path> ])
homebrew_include_dep = declare_dependency(
	include_directories: include_directories( <homebrew-include-path> ))

# windows-only deps
windows_ws2_32_dep = meson.get_compiler('c').find_library('ws2_32', required: false)
windows_dnsapi_dep = meson.get_compiler('c').find_library('dnsapi', required: false)
windows_iphlpapi_dep = meson.get_compiler('c').find_library('iphlpapi', required: false)

add_global_arguments('--enable-checking', language: 'vala')
add_global_arguments('--target-glib=2.55', language: 'vala')

#
# libsqlite3 (static library)
#

libsqlite3_a = static_library(
    'sqlite3',
    [ 'src/libsqlite3/sqlite3.c' ],
    dependencies: [
        linux_dl_dep,
        m_dep,
        threads_dep
    ])

libsqlite3_vapi = meson.get_compiler('vala').find_library(
    'sqlite3',
    dirs: join_paths(meson.current_source_dir(), 'ext/vapi'))

libsqlite3_dep = declare_dependency(
    dependencies: [libsqlite3_vapi],
    link_with: libsqlite3_a,
    include_directories: include_directories('src/libsqlite3'))

#
# liblinenoise (static library)
#

liblinenoise_a = static_library(
    'linenoise',
    [
        'ext/linenoise-ng/src/ConvertUTF.cpp',
        'ext/linenoise-ng/src/linenoise.cpp',
        'ext/linenoise-ng/src/wcwidth.cpp'
    ],
    include_directories: include_directories('ext/linenoise-ng/include'))

liblinenoise_dep = declare_dependency(
    link_with: liblinenoise_a,
    include_directories: include_directories('ext/linenoise-ng/include'))

#
# libsqlnotebook (shared library)
#

libsqlnotebook_link_args = []
libsqlnotebook_c_args = []
if host_machine.system() == 'windows'
    libsqlnotebook_link_args += '-Wl,--export-all-symbols'
    libsqlnotebook_c_args += '-municode'
endif

libsqlnotebook_so = shared_library(
    'sqlnotebook',
    [ <sources-libsqlnotebook> ],
    dependencies: [
        gio_dep,
        glib_dep,
        gobject_dep,
        gmodule_dep,
        gee_dep,
        z_dep,
        windows_ws2_32_dep,
        windows_dnsapi_dep,
        windows_iphlpapi_dep,
        threads_dep,
        posix_dep,
        libsqlite3_dep,
        jansson_dep,
        homebrew_include_dep,
        zip_dep
    ],
    link_args: libsqlnotebook_link_args,
    c_args: libsqlnotebook_c_args)

libsqlnotebook_dep = declare_dependency(
    link_with: libsqlnotebook_so,
    include_directories: include_directories('.'))

#
# sqlnotebook (executable)
#

sqlnotebook_c_args = []
if host_machine.system() == 'windows'
    sqlnotebook_c_args += '-municode'
endif

executable(
    'sqlnotebook',
    [ <sources-sqlnotebook> ],
    dependencies: [
        gio_dep,
        glib_dep,
        gobject_dep,
        gmodule_dep,
        gee_dep,
        z_dep,
        windows_ws2_32_dep,
        windows_dnsapi_dep,
        windows_iphlpapi_dep,
        posix_dep,
        liblinenoise_dep,
        libsqlnotebook_dep
    ],
    c_args: sqlnotebook_c_args)

#
# sqlnotebook-gui (executable)
#

sqlnotebookgui_c_args = []
if host_machine.system() == 'windows'
    sqlnotebookgui_c_args += '-municode'
endif

executable(
    'sqlnotebook-gui',
    [
        <sources-sqlnotebook-gui>,
        gnome.compile_resources(
            'resources',
            'src/sqlnotebook-gui/resources/gresource.xml',
            source_dir: ['src/sqlnotebook-gui/resources/'])
    ],
    dependencies: [
        gio_dep,
        glib_dep,
        gobject_dep,
        gmodule_dep,
        gee_dep,
        z_dep,
        windows_ws2_32_dep,
        windows_dnsapi_dep,
        windows_iphlpapi_dep,
        gtk_dep,
        posix_dep,
        libsqlnotebook_dep
    ],
    gui_app: true,
    vala_args: '--gresources=../src/sqlnotebook-gui/resources/gresource.xml',
    c_args: sqlnotebookgui_c_args)

#
# linux-launcher (executable)
#

if host_machine.system() == 'linux'
    executable(
        'linux-launcher',
        [ <sources-linux-launcher> ],
        dependencies: [])
endif

#
# tests (executable)
#

tests_c_args = []
if host_machine.system() == 'windows'
    tests_c_args += '-municode'
endif

executable(
    'tests',
    [ <sources-tests> ],
    dependencies: [
        gio_dep,
        glib_dep,
        gobject_dep,
        gmodule_dep,
        gee_dep,
        z_dep,
        windows_ws2_32_dep,
        windows_dnsapi_dep,
        windows_iphlpapi_dep,
        posix_dep,
        libsqlnotebook_dep
    ],
    c_args: tests_c_args)
